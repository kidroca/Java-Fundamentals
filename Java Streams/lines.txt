// Pins and durations
int ledR0 = 10;
int ledY0 = 11;
int ledG0 = 12;
int ledR1 = 7;
int ledY1 = 8;
int ledG1 = 9;
int timeSwichedOn = 3000;
int greenLightOffTime = 1800;
int blinkTime = 300;
int otherLightsOffTime = 5;

class Flasher
{
	// Class Member Variables
	// These are initialized at startup
	int ledPin;      // the number of the LED pin
	long OnTime;     // milliseconds of on-time
	long OffTime;    // milliseconds of off-time
 
	// These maintain the current state
	int ledState;             		// ledState used to set the LED
	unsigned long previousMillis;  	// will store last time LED was updated
 
  // Constructor - creates a Flasher 
  // and initializes the member variables and state
  public:
  Flasher(int pin, long on, long off)
  {
	ledPin = pin;
	pinMode(ledPin, OUTPUT);     
	  
	OnTime = on;
	OffTime = off;
	
	ledState = LOW; 
	previousMillis = 0;
  }
 
  void Update()
  {
    // check to see if it's time to change the state of the LED
    unsigned long currentMillis = millis();
     
    if((ledState == HIGH) && (currentMillis - previousMillis >= OnTime))
    {
    	ledState = LOW;  // Turn it off
      previousMillis = currentMillis;  // Remember the time
      digitalWrite(ledPin, ledState);  // Update the actual LED
    }
    else if ((ledState == LOW) && (currentMillis - previousMillis >= OffTime))
    {
      ledState = HIGH;  // turn it on
      previousMillis = currentMillis;   // Remember the time
      digitalWrite(ledPin, ledState);	  // Update the actual LED
    }
  }
};
 
 
Flasher greenLight(ledG0, timeSwichedOn, otherLightsOffTime);
Flasher blinkGreen(ledG0, blinkTime, blinkTime);
Flasher redLight(ledR0, timeSwichedOn, otherLightsOffTime);
Flasher yellowLight(ledY0, timeSwichedOn, otherLightsOffTime);
 
void setup()
{
}
 
void loop()
{
  greenLight.Update();
  blinkGreen.Update();
  blinkGreen.Update();
  blinkGreen.Update();
  redLight.Update();
  yellowLight.Update();
}